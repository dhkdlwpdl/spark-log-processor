/*
 * This source file was generated by the Gradle 'init' task
 */
package com.example
import org.apache.spark.sql.types.StructType
import org.apache.spark.sql.{SparkSession, functions => F}

import java.io.FileInputStream
import java.util.Properties

object App {
  def main(args: Array[String]): Unit = {
    // 설정 파일 로딩
    val properties = new Properties()
    properties.load(new FileInputStream("conf/conf.properties"))

    val spark = SparkSession.builder()
      .appName("LogProcessor")
      .config("spark.sql.shuffle.partitions", "2")
      .config("spark.driver.bindAddress", "127.0.0.1")
      .master("local[*]")
      .enableHiveSupport()
      .getOrCreate()

    val df = spark.read
      .option("header", "true")
      .option("inferSchema", "true")
      .csv(properties.getProperty("inputCsvPath"))

    print(df.count())


    val processedDF = df.withColumn(
      "event_date",
      F.date_format(F.from_utc_timestamp(F.col("event_time"), "Asia/Seoul"), "yyyy-MM-dd")
    )

    print(processedDF.count())

    if (!spark.catalog.tableExists(properties.getProperty("targetTableName"))) {
      createExternalTable(spark, properties.getProperty("targetTableName"), processedDF.schema, properties.getProperty("outputParquetPath"))
    }


    processedDF.write
      .format("parquet")
      .option("compression", "snappy")
      .option("path", properties.getProperty("outputParquetPath"))
      .partitionBy("event_date")
      .mode("append")
      .save()

    spark.sql(s"SELECT count(*) FROM ${properties.getProperty("targetTableName")}").show()

    spark.stop()
  }

  def createExternalTable(spark: SparkSession, tableName: String, schema: StructType, tableLocation: String): Unit = {
    val columnDefinitions = schema.fields.map { field =>
      s"${field.name} ${field.dataType.sql}"
    }.mkString(", ")

    spark.sql(
      s"""
         |CREATE EXTERNAL TABLE IF NOT EXISTS $tableName (
         |  $columnDefinitions
         |)
         |STORED AS PARQUET
         |LOCATION '$tableLocation'
         |""".stripMargin)
  }

}
